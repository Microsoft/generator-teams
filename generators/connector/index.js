module.exports=function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=23)}([function(e,t){e.exports=require("path")},function(e,t){e.exports=require("yeoman-generator")},function(e,t){e.exports=require("lodash")},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(4);let r=o(0);const i="package.json";t.Yotilities=class{static validateUrl(e){return/(https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/.test(e)}static fixFileNames(e,t){if(void 0!==e){var o=r.basename(e);if("_"===o[0]){e="."+o.substr(1);var n=r.dirname(e);e=r.join(n,e)}for(var i in t)t.hasOwnProperty(i)&&"string"==typeof t[i]&&(e=e.replace(new RegExp("{"+i+"}","g"),t[i]))}return e}static addAdditionalDeps(e,t){var o=t.readJSON(i);e.forEach(e=>{o.dependencies[e[0]]=e[1]}),t.writeJSON(i,o)}static insertTsExportDeclaration(e,t,o,r){let i=r.read(e);const s=n.createSourceFile(e,i,n.ScriptTarget.ES5,!0,n.ScriptKind.TS),c=n.createExportDeclaration(void 0,void 0,void 0,n.createLiteral(t));void 0!==o&&n.addSyntheticLeadingComment(c,n.SyntaxKind.SingleLineCommentTrivia,` ${o}`);const a=n.updateSourceFileNode(s,[...s.statements,c]),p=n.createPrinter({newLine:n.NewLineKind.LineFeed,removeComments:!1});r.write(e,p.printFile(a))}}},function(e,t){e.exports=require("typescript")},function(e,t){e.exports=require("yosay")},function(e,t){e.exports=require("guid")},,,,,,,,,,,,,,,,,function(e,t,o){e.exports=o(24)},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(25);e.exports=n.ConnectorGenerator},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(1),r=o(2),i=o(3);o(5),o(0);let s=o(6);t.ConnectorGenerator=class extends n{constructor(e,t){super(e,t),t.force=!0,this.options=t.options,this.desc("Adds a Connector to a Microsoft Teams Apps project")}prompting(){if(this.options.connector)return this.prompt([{type:"list",name:"connectorType",message:"What type of Connector would you like to include?",default:"new",choices:[{name:"An already existing and running Connector (not hosted in this solution)",value:"existing"},{name:"A new Connector hosted in this solution",value:"new"}]},{type:"input",name:"connectorId",message:"What is the Id of your Connector (found in the Connector Developer Portal)?",default:e=>s.EMPTY,validate:e=>s.isGuid(e)},{type:"input",name:"connectorName",message:"What is the name of your Connector?",default:this.options.title,validate:e=>e.length>0,when:e=>"existing"!=e.connectorType}]).then(e=>{this.options.connectorId=e.connectorId,this.options.connectorType=e.connectorType,this.options.connectorTitle=e.connectorName,this.options.connectorName=r.camelCase(e.connectorName),this.options.connectorComponentName=this.options.connectorName.charAt(0).toUpperCase()+this.options.connectorName.slice(1),this.options.connectorName.endsWith("Connector")||(this.options.connectorName=this.options.connectorName+"Connector"),this.options.reactComponents=!0})}writing(){if(this.options.connector){if("existing"!=this.options.connectorType){let e=["README-{connectorName}.md","src/app/{connectorName}.ts","src/app/web/{connectorName}.html","src/app/web/{connectorName}Connect.ejs","src/app/scripts/{connectorName}Connect.tsx","src/app/web/{connectorName}Connected.html"];this.sourceRoot(),e.forEach(e=>{this.fs.copyTpl(this.templatePath(e),i.Yotilities.fixFileNames(e,this.options),this.options)})}let t="src/manifest/manifest.json";var e=this.fs.readJSON(t);e.connectors.push({connectorId:this.options.connectorId,scopes:["team"]}),this.fs.writeJSON(t,e),i.Yotilities.addAdditionalDeps([["@types/ejs","2.6.0"],["@types/node-json-db","0.0.1"],["ejs","2.6.1"],["node-json-db","0.7.5"],["msteams-ui-components-react","^0.7.3"],["react","^16.1.0"],["@types/react","16.4.7"],["react-dom","^16.2.0"],["file-loader","1.1.11"],["typestyle","1.7.2"]],this.fs),i.Yotilities.insertTsExportDeclaration("src/app/scripts/client.ts",`./${this.options.connectorName}Connect`,`Automatically added for the ${this.options.connectorName} connector`,this.fs),i.Yotilities.insertTsExportDeclaration("src/app/TeamsAppsComponents.ts",`./${this.options.connectorName}`,`Automatically added for the ${this.options.connectorName} connector`,this.fs)}}}}]);